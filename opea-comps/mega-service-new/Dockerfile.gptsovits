FROM python:3.10-slim

# Set build argument for Hugging Face token
ARG HUGGING_FACE_HUB_TOKEN

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app \
    HUGGING_FACE_HUB_TOKEN=${HUGGING_FACE_HUB_TOKEN}

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    git \
    python3-dev \
    python3-pip \
    ffmpeg \
    libsndfile1 \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Create and activate virtual environment
RUN python -m venv /app/.venv
ENV PATH="/app/.venv/bin:$PATH"

# Upgrade pip and install basic tools
RUN pip install --no-cache-dir --upgrade pip setuptools wheel

# Clone GPT-SoVITS repository first
RUN git clone https://github.com/RVC-Boss/GPT-SoVITS.git /app/GPT_SoVITS

# Install onnxruntime first
RUN pip install --no-cache-dir onnxruntime==1.16.3 --timeout 1000 --retries 5

# Create modified requirements file without problematic packages
WORKDIR /app/GPT_SoVITS
RUN grep -v "onnxruntime-gpu" requirements.txt | \
    grep -v "opencc" | \
    grep -v "torchaudio" > requirements_modified.txt

# Install GPT-SoVITS dependencies with modified requirements
RUN pip install --no-cache-dir -r requirements_modified.txt --timeout 1000 --retries 5

# Add GPT-SoVITS to Python path
ENV PYTHONPATH="/app/GPT_SoVITS:$PYTHONPATH"

# Install JAX with CPU support
RUN pip install --no-cache-dir jax==0.4.23 jaxlib==0.4.23 -f https://storage.googleapis.com/jax-releases/jax_releases.html

# Install opea-comps
WORKDIR /app
COPY setup.py /app/setup.py
COPY comps /app/comps
RUN pip install -e .

# Install remaining dependencies in specific order to avoid conflicts
RUN pip install --no-cache-dir --no-deps numpy==1.23.5 --timeout 1000 --retries 5
RUN pip install --no-cache-dir --no-deps 'pybind11>=2.12.0' --timeout 1000 --retries 5
RUN pip install --no-cache-dir --no-deps numba==0.56.4 --timeout 1000 --retries 5
RUN pip install --no-cache-dir --no-deps scipy==1.10.1 --timeout 1000 --retries 5
RUN pip install --no-cache-dir --no-deps audioread==3.0.1 --timeout 1000 --retries 5
RUN pip install --no-cache-dir --no-deps cffi==1.16.0 --timeout 1000 --retries 5
RUN pip install --no-cache-dir --no-deps soundfile==0.12.1 --timeout 1000 --retries 5
RUN pip install --no-cache-dir --no-deps resampy==0.4.2 --timeout 1000 --retries 5
RUN pip install --no-cache-dir --no-deps joblib==1.3.2 --timeout 1000 --retries 5
RUN pip install --no-cache-dir librosa==0.9.2 --timeout 1000 --retries 5
RUN pip install --no-cache-dir sympy==1.12 filelock==3.12.2 jinja2==3.1.2 networkx==3.1 --timeout 1000 --retries 5

# Install PyTorch
RUN pip install --no-cache-dir \
    torch==2.0.1 \
    torchaudio==2.0.2 \
    --index-url https://download.pytorch.org/whl/cpu

# Install FastAPI and Uvicorn
RUN pip install --no-cache-dir fastapi uvicorn

# Create necessary directories
RUN mkdir -p /app/models /app/audio /app/output && \
    chmod -R 777 /app/audio /app/output

# Copy service code
COPY mega-service-new/app /app/service
COPY setup.py /app/setup.py
COPY comps /app/comps

# Set working directory for service
WORKDIR /app/service

# Start the service
CMD ["uvicorn", "gptsovits:app", "--host", "0.0.0.0", "--port", "8000"] 